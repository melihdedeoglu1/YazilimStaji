version: '3.8'

services:
 
  api-gateway:
    container_name: api-gateway
    build:
      context: ./src/Gateway/ApiGateway
      dockerfile: Dockerfile
    ports:
      - "7000:8080"
    depends_on:
      - kullanici-servisi
      - urun-servisi
  
  web-bff:
    container_name: web-bff
    build:
      context: ./src/BFF/WebBff.API
      dockerfile: Dockerfile
    ports:
      - "5003:8080" 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development


  postgres-db:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=kullanici_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      
  kullanici-servisi:
    container_name: kullanici-servisi
    build:
      context: ./src/Services/Kullanici.API
      dockerfile: Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres-db;Port=5432;Database=kullanici_db;Username=user;Password=password
    depends_on:
      - postgres-db

  urun-servisi:
    container_name: urun-servisi
    build:
      context: ./src/Services/Urun.API
      dockerfile: Dockerfile
    ports:
      - "5002:8080" 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres-db;Port=5432;Database=urun_db;Username=user;Password=password 
    depends_on:
      - postgres-db

volumes:
  pgdata: